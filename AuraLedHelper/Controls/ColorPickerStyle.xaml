<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls">



    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <xctk:InverseBoolConverter x:Key="InverseBoolConverter"/>
    <xctk:ColorToSolidColorBrushConverter x:Key="ColorToSolidColorBrushConverter"/>
    <xctk:AdditionConverter x:Key="AdditionConverter"/>

    <DrawingBrush x:Key="CheckerBrush" Viewport="0,0,10,10" ViewportUnits="Absolute" TileMode="Tile">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="White">
                    <GeometryDrawing.Geometry>
                        <RectangleGeometry Rect="0,0 100,100"/>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <GeometryDrawing Brush="LightGray">
                    <GeometryDrawing.Geometry>
                        <GeometryGroup>
                            <RectangleGeometry Rect="0,0 50,50"/>
                            <RectangleGeometry Rect="50,50 50,50"/>
                        </GeometryGroup>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <Style x:Key="ColorCanvasTextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Style.Triggers>
            <Trigger Property="UIElement.IsFocused" Value="false">
                <Setter Property="Control.BorderBrush" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="{TemplateBinding Control.Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VerticalSlideThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Height" Value="12"/>
        <Setter Property="Width" Value="11"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border BorderBrush="{x:Null}" Background="Transparent">
                        <Canvas SnapsToDevicePixels="true">
                            <Path x:Name="LeftArrow" Stretch="Fill" StrokeLineJoin="Round" Stroke="{DynamicResource TextBrush}" Fill="{DynamicResource TextBrush}" Data="F1 M 276.761,316 L 262.619,307.835 262.619,324.165 276.761,316 Z" RenderTransformOrigin="0.5,0.5" Width="6" Height="8">
                                <UIElement.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform Y="6" X="-3"/>
                                    </TransformGroup>
                                </UIElement.RenderTransform>
                            </Path>
                            <Path x:Name="RightArrow" Stretch="Fill" StrokeLineJoin="Round" Stroke="{DynamicResource TextBrush}" Fill="{DynamicResource TextBrush}"  Data="F1 M 276.761,316 L 262.619,307.835 262.619,324.165 276.761,316 Z" RenderTransformOrigin="0.5,0.5" Width="6" Height="8">
                                <UIElement.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="-180"/>
                                        <TranslateTransform Y="6" X="8"/>
                                    </TransformGroup>
                                </UIElement.RenderTransform>
                            </Path>
                        </Canvas>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type xctk:ColorCanvas}">
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
        
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xctk:ColorCanvas}">
                    <Border Background="{TemplateBinding Control.Background}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}"
                            BorderBrush="{TemplateBinding Control.BorderBrush}" Padding="3">
                        <Grid Margin="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Border BorderThickness="1" BorderBrush="{TemplateBinding Control.BorderBrush}" ClipToBounds="true" Background="{StaticResource CheckerBrush}">
                                    <Grid x:Name="ColorCanvasGrid">
                                        <Canvas x:Name="PART_ColorShadingCanvas" Width="{Binding ActualWidth, ElementName=ColorCanvasGrid}" Height="100" HorizontalAlignment="Left" VerticalAlignment="Top">
                                            <Rectangle x:Name="ColorShadingRectangle" Height="{Binding ElementName=PART_ColorShadingCanvas, Path=Height}"
                                                       Width="{Binding ElementName=PART_ColorShadingCanvas, Path=Width}"
                                                       Fill="{Binding SelectedColor, ElementName=PART_SpectrumSlider, Converter={StaticResource ColorToSolidColorBrushConverter}}"/>
                                            <Rectangle x:Name="WhiteGradient" Width="{Binding ElementName=PART_ColorShadingCanvas, Path=Width}"
                                                       Height="{Binding ElementName=PART_ColorShadingCanvas, Path=Height}">
                                                <Shape.Fill>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                        <GradientStop Offset="0" Color="#ffffffff"/>
                                                        <GradientStop Offset="1" Color="Transparent"/>
                                                    </LinearGradientBrush>
                                                </Shape.Fill>
                                            </Rectangle>
                                            <Rectangle x:Name="BlackGradient" Width="{Binding ElementName=PART_ColorShadingCanvas, Path=Width}" Height="{Binding ElementName=PART_ColorShadingCanvas, Path=Height}">
                                                <Shape.Fill>
                                                    <LinearGradientBrush StartPoint="0,1" EndPoint="0, 0">
                                                        <GradientStop Offset="0" Color="#ff000000"/>
                                                        <GradientStop Offset="1" Color="#00000000"/>
                                                    </LinearGradientBrush>
                                                </Shape.Fill>
                                            </Rectangle>
                                            <Canvas x:Name="PART_ColorShadeSelector" Width="10" Height="10" IsHitTestVisible="false">
                                                <Ellipse Width="10" Height="10" StrokeThickness="3" Stroke="#FFFFFFFF" IsHitTestVisible="false"/>
                                                <Ellipse Width="10" Height="10" StrokeThickness="1" Stroke="#FF000000" IsHitTestVisible="false"/>
                                            </Canvas>
                                        </Canvas>
                                    </Grid>
                                </Border>
                                <Border Grid.Row="1" Margin="0,5,0,0">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Border x:Name="SelectedColorBorder" Background="{StaticResource CheckerBrush}" Height="22" Margin="2,0,2,0" BorderThickness="1" BorderBrush="{TemplateBinding Control.BorderBrush}">
                                            <Rectangle x:Name="SelectedColor" Fill="{Binding SelectedColor, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ColorToSolidColorBrushConverter}}"/>
                                        </Border>
                                        <TextBox x:Name="PART_HexadecimalTextBox" Grid.Column="1" Margin="2,0,2,0" VerticalAlignment="Center" Style="{StaticResource ColorCanvasTextBoxStyle}"/>
                                    </Grid>
                                </Border>
                                <Border Grid.Column="1" Grid.RowSpan="2" Margin="4,-8,0,0" ClipToBounds="false">
                                    <xctk:ColorSpectrumSlider x:Name="PART_SpectrumSlider" VerticalAlignment="Stretch"/>
                                </Border>
                            </Grid>
                            <Border x:Name="RGBBorder" MinWidth="180" Grid.Row="1" BorderThickness="1" ClipToBounds="true" Margin="0,10,0,0">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="30"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Row="0" Grid.Column="0" Text="R" VerticalAlignment="Center"/>
                                    <Slider x:Name="PART_RSlider" Maximum="255" SmallChange="1" LargeChange="10" TickFrequency="1" Grid.Row="0" Grid.Column="1" Margin="4,6,4,6" 
                                            VerticalAlignment="Center" 
                                            Value="{Binding R, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <TextBox Grid.Row="0" Grid.Column="2" VerticalAlignment="Center" 
                                             Style="{StaticResource ColorCanvasTextBoxStyle}" 
                                             Text="{Binding Value, ElementName=PART_RSlider, StringFormat={}{0,3:##0}}"/>
                                    <TextBlock Grid.Row="1" Grid.Column="0" Text="G" VerticalAlignment="Center"/>
                                    <Slider x:Name="PART_GSlider" Maximum="255" SmallChange="1" LargeChange="10" TickFrequency="1" Grid.Row="1" Grid.Column="1" Margin="4,6,4,6"
                                            VerticalAlignment="Center"
                                            Value="{Binding G, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <TextBox Grid.Row="1" Grid.Column="2" VerticalAlignment="Center" 
                                             Style="{StaticResource ColorCanvasTextBoxStyle}"
                                             Text="{Binding Value, ElementName=PART_GSlider, StringFormat={}{0,3:##0}}"/>
                                    <TextBlock Grid.Row="2" Grid.Column="0" Text="B" VerticalAlignment="Center"/>
                                    <Slider x:Name="PART_BSlider" Maximum="255" SmallChange="1" LargeChange="10" TickFrequency="1" Grid.Row="2" Grid.Column="1" Margin="4,6,4,6"
                                            VerticalAlignment="Center"
                                            Value="{Binding B, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <TextBox Grid.Row="2" Grid.Column="2" VerticalAlignment="Center"
                                             Style="{StaticResource ColorCanvasTextBoxStyle}"
                                             Text="{Binding Value, ElementName=PART_BSlider, StringFormat={}{0,3:##0}}"/>
                                    <TextBlock Grid.Row="3" Grid.Column="0" Text="A" VerticalAlignment="Center"
                                               Visibility="{Binding Path=UsingAlphaChannel, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                    <Slider x:Name="PART_OpacitySlider" Grid.Row="3" Grid.Column="1" Maximum="255" SmallChange="1" LargeChange="10" Margin="4,6,4,6"
                                            VerticalAlignment="Center"
                                            Value="{Binding Path=A, RelativeSource={RelativeSource TemplatedParent}}"
                                            Visibility="{Binding Path=UsingAlphaChannel, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                    <TextBox Grid.Row="3" Grid.Column="2" VerticalAlignment="Center"
                                             Style="{StaticResource ColorCanvasTextBoxStyle}"
                                             Text="{Binding Value, ElementName=PART_OpacitySlider, StringFormat={}{0,3:##0}}"
                                             Visibility="{Binding Path=UsingAlphaChannel, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
                        </Trigger>
                        <Trigger Value="{x:Null}" Property="xctk:ColorCanvas.SelectedColor">
                            <Setter TargetName="PART_ColorShadeSelector" Property="UIElement.Visibility" Value="Collapsed"/>
                            <Setter TargetName="SelectedColorBorder" Property="Border.Background" Value="Transparent"/>
                            <Setter TargetName="RGBBorder" Property="UIElement.IsEnabled" Value="false"/>
                            <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" TargetName="RGBBorder" Property="TextElement.Foreground"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type xctk:ColorSpectrumSlider}">
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Orientation" Value="Vertical"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="Minimum" Value="0"/>
        <Setter Property="Maximum" Value="360"/>
        <Setter Property="TickFrequency" Value="0.001"/>
        <Setter Property="IsSnapToTickEnabled" Value="true"/>
        <Setter Property="IsDirectionReversed" Value="false"/>
        <Setter Property="IsMoveToPointEnabled" Value="true"/>
        <Setter Property="Value" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xctk:ColorSpectrumSlider}">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Margin="0,8,0,0">
                            <Border x:Name="PART_TrackBackground" Width="15">
                                <Rectangle x:Name="PART_SpectrumDisplay" Stretch="Fill" VerticalAlignment="Stretch"/>
                            </Border>
                        </Border>
                        <Track Name="PART_Track">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}" Command="Slider.DecreaseLarge"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}" Command="Slider.IncreaseLarge"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource VerticalSlideThumbStyle}"/>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColorItemContainerStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="ToolTip" Value="{Binding Name}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid x:Name="mainGrid" ToolTip="{Binding Name}">
                        <FrameworkElement.Resources>
                            <Style TargetType="{x:Type ToolTip}">
                                <Style.Triggers>
                                    <Trigger Property="ContentControl.Content" Value="{x:Static system:String.Empty}">
                                        <Setter Property="UIElement.Visibility" Value="Collapsed"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </FrameworkElement.Resources>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <Border x:Name="_outerBorder" BorderThickness="1" Background="Transparent" BorderBrush="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Border x:Name="_innerBorder" Background="Transparent" BorderThickness="1" BorderBrush="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="_outerBorder" Property="Border.BorderBrush" Value="#FFFF0000"/>
                            <Setter TargetName="_innerBorder" Property="Border.BorderBrush" Value="#FFFFFF00"/>
                        </Trigger>
                        <Trigger Property="ListBoxItem.IsSelected" Value="true">
                            <Setter TargetName="_outerBorder" Property="Border.BorderBrush" Value="#FFFF0000"/>
                            <Setter TargetName="_innerBorder" Property="Border.BorderBrush" Value="#FFFFFF00"/>
                        </Trigger>
                        <DataTrigger Value="False" Binding="{Binding DisplayColorAndName, RelativeSource={RelativeSource AncestorType={x:Type xctk:ColorPicker}}}">
                            <Setter Value="{x:Static system:String.Empty}" TargetName="mainGrid" Property="FrameworkElement.ToolTip"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="ColorItemTemplate">
        <Grid>
            <Border Background="{StaticResource CheckerBrush}" BorderBrush="{DynamicResource TextBoxBorderBrush}" BorderThickness="1" Margin="2,2,2,2">
                <Rectangle Width="14" Height="14">
                    <FrameworkElement.Style>
                        <Style TargetType="{x:Type Rectangle}">
                            <Setter Property="Fill" Value="{Binding Color, Converter={StaticResource ColorToSolidColorBrushConverter}}"/>
                        </Style>
                    </FrameworkElement.Style>
                </Rectangle>
            </Border>
        </Grid>
    </DataTemplate>

    <Style x:Key="ColorPickerToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Padding" Value="3"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid SnapsToDevicePixels="true">
                        <Border x:Name="PART_Background" Background="{TemplateBinding Control.Background}"
                                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                                    Padding="{TemplateBinding Control.Padding}"
                                    SnapsToDevicePixels="true"
                                    CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ControlsHelper.CornerRadius), Mode=OneWay}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Content="{TemplateBinding ContentControl.Content}"
                                  ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                  ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}"
                                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"/>
                                <Grid x:Name="BtnArrowBackground"
                                  Grid.Column="1"
                                  Width="{TemplateBinding controls:TextBoxHelper.ButtonWidth}"
                                  Background="Transparent">
                                    <Path x:Name="BtnArrow"
                                      Width="8"
                                      Height="4"
                                      HorizontalAlignment="Center"
                                      Fill="{DynamicResource GrayBrush1}"
                                      Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z "
                                      IsHitTestVisible="false"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      Stretch="Uniform" />
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="BtnArrowBackground" Property="IsMouseOver" Value="True">
                            <Setter TargetName="BtnArrowBackground" Property="Background" Value="{DynamicResource GrayBrush5}" />
                        </Trigger>
                        <Trigger SourceName="PART_Background" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Background" Property="Background" Value="{DynamicResource GrayBrush8}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True">
                            <Setter TargetName="BtnArrowBackground" Property="Background" Value="{DynamicResource GrayBrush3}" />
                            <Setter TargetName="PART_Background" Property="Background" Value="{DynamicResource GrayBrush7}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True">
                            <Setter TargetName="PART_Background" Property="Background" Value="{DynamicResource GrayBrush8}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ColorDisplayStyle" TargetType="{x:Type ContentControl}">
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border Background="{StaticResource CheckerBrush}">
                        <Rectangle Fill="{Binding SelectedColor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=xctk:ColorPicker}, Converter={StaticResource ColorToSolidColorBrushConverter}}"/>
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding SelectedColor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=xctk:ColorPicker}}"
                   Value="{x:Null}">
                <Setter Property="UIElement.Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="ColorListStyle" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="MaxHeight" Value="500"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Width="{Binding MaxDropDownWidth, RelativeSource={RelativeSource AncestorType={x:Type xctk:ColorPicker}}, Converter={StaticResource AdditionConverter}, ConverterParameter=-18}"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ColorItemContainerStyle}"/>
        <Setter Property="ItemTemplate" Value="{StaticResource ColorItemTemplate}"/>
        <Setter Property="SelectionMode" Value="Single"/>
    </Style>
    
    <Style TargetType="{x:Type xctk:ColorPicker}">
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>

        <Setter Property="controls:ControlsHelper.FocusBorderBrush" Value="{DynamicResource ComboBoxMouseOverInnerBorderBrush}"/>
        <Setter Property="controls:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource TextBoxMouseOverBorderBrush}"/>
        <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}"/>
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}"/>

        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="ButtonStyle" Value="{DynamicResource ColorPickerToggleButtonStyle}"/>
        <Setter Property="MaxDropDownWidth" Value="218"/>
        <Setter Property="MinHeight" Value="22"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type xctk:ColorPicker}">
                    <Grid>
                        <ToggleButton x:Name="PART_ColorPickerToggleButton" IsTabStop="true" MinHeight="22"
                                      Background="{TemplateBinding Control.Background}"
                                      BorderBrush="{TemplateBinding Control.BorderBrush}"
                                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                                      VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                      HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                      Padding="{TemplateBinding Control.Padding}" Style="{TemplateBinding xctk:ColorPicker.ButtonStyle}"
                                      IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                      IsHitTestVisible="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}">
                            <Grid>
                                <ContentControl x:Name="ColorOnly" Style="{StaticResource ColorDisplayStyle}"/>
                                <Grid x:Name="ColorAndName" Visibility="Collapsed">
                                    <StackPanel Orientation="Horizontal">
                                        <ContentControl HorizontalAlignment="Left" Width="20" Margin="0,0,4,0" Style="{StaticResource ColorDisplayStyle}"/>
                                        <TextBlock VerticalAlignment="Center" Text="{Binding SelectedColorText, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </StackPanel>
                                </Grid>
                            </Grid>
                        </ToggleButton>
                        <Popup x:Name="PART_ColorPickerPalettePopup" VerticalAlignment="Bottom" StaysOpen="false"
                               AllowsTransparency="true" Focusable="false" HorizontalOffset="1" VerticalOffset="1"
                               PopupAnimation="Slide" ToolTip="{x:Static system:String.Empty}"
                               IsOpen="{Binding ElementName=PART_ColorPickerToggleButton, Path=IsChecked}">
                            <FrameworkElement.Resources>
                                <Style TargetType="{x:Type ToolTip}">
                                    <Style.Triggers>
                                        <Trigger Property="ContentControl.Content" Value="{x:Static system:String.Empty}">
                                            <Setter Property="UIElement.Visibility" Value="Collapsed"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </FrameworkElement.Resources>
                            <Border BorderThickness="1" Background="{TemplateBinding Control.Background}" BorderBrush="{TemplateBinding Control.BorderBrush}" Padding="3">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid x:Name="_colorPaletteHost" Visibility="Collapsed" Margin="4">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid Row="1" Visibility="{TemplateBinding ShowAvailableColors, Converter={StaticResource BooleanToVisibilityConverter}}">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>
                                                <TextBlock Text="{TemplateBinding xctk:ColorPicker.AvailableColorsHeader}" Padding="2" Margin="0,0,0,1"/>
                                                <ListBox x:Name="PART_AvailableColors" Grid.Row="1" Style="{StaticResource ColorListStyle}" ItemsSource="{Binding AvailableColors, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            </Grid>
                                        </Grid>
                                        <Grid Row="2" Visibility="{TemplateBinding ShowStandardColors, Converter={StaticResource BooleanToVisibilityConverter}}">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <TextBlock Text="{TemplateBinding xctk:ColorPicker.StandardColorsHeader}" Padding="2" Margin="0,1,0,1"/>
                                                <ListBox x:Name="PART_StandardColors" Grid.Row="1" Style="{StaticResource ColorListStyle}" ItemsSource="{Binding StandardColors, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            </Grid>
                                        </Grid>
                                        <Grid Row="3" Margin="0,1,0,1" Visibility="{TemplateBinding ShowRecentColors, Converter={StaticResource BooleanToVisibilityConverter}}">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="22"/>
                                                </Grid.RowDefinitions>
                                                <TextBlock Text="{TemplateBinding xctk:ColorPicker.RecentColorsHeader}" Padding="2" Margin="0,1,0,1"/>
                                                <ListBox x:Name="PART_RecentColors" Grid.Row="1" Style="{StaticResource ColorListStyle}" ItemsSource="{Binding RecentColors, RelativeSource={RelativeSource TemplatedParent}}"/>
                                            </Grid>
                                        </Grid>
                                    </Grid>
                                    <Grid x:Name="_colorCanvasHost" Visibility="Collapsed">
                                        <xctk:ColorCanvas Background="Transparent" BorderThickness="0"
                                                           UsingAlphaChannel="{Binding UsingAlphaChannel, RelativeSource={RelativeSource TemplatedParent}}"
                                                           SelectedColor="{Binding SelectedColor, RelativeSource={RelativeSource TemplatedParent}}"
                                                           Width="{Binding MaxDropDownWidth, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource AdditionConverter}, ConverterParameter=-18}"/>
                                    </Grid>
                                    <Separator Grid.Row="1" HorizontalAlignment="Stretch" Margin="5,0,5,0" Visibility="{TemplateBinding ShowAdvancedButton, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                    <Button x:Name="PART_ColorModeButton" Grid.Row="2" Margin="5" Visibility="{TemplateBinding ShowAdvancedButton, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                </Grid>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="xctk:ColorPicker.DisplayColorAndName" Value="true">
                            <Setter TargetName="ColorOnly" Property="UIElement.Visibility" Value="Collapsed"/>
                            <Setter TargetName="ColorAndName" Property="UIElement.Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="xctk:ColorPicker.ColorMode" Value="ColorPalette">
                            <Setter TargetName="_colorPaletteHost" Property="UIElement.Visibility" Value="Visible"/>
                            <Setter TargetName="_colorCanvasHost" Property="UIElement.Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_ColorModeButton" Property="ContentControl.Content" Value="{Binding AdvancedButtonHeader, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="xctk:ColorPicker.ColorMode" Value="ColorCanvas">
                            <Setter TargetName="_colorPaletteHost" Property="UIElement.Visibility" Value="Collapsed"/>
                            <Setter TargetName="_colorCanvasHost" Property="UIElement.Visibility" Value="Visible"/>
                            <Setter TargetName="PART_ColorModeButton" Property="ContentControl.Content" Value="{Binding StandardButtonHeader, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="xctk:ColorPicker.ShowDropDownButton" Value="false">
                            <Setter Property="Control.BorderThickness" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>